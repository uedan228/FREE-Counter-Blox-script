-- Welcome to LuaObfuscator.com   (Alpha 0.10.5) ~  Much Love, Ferib 

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=0;local v84;while true do if (v83==0) then v84=v2(v0(v30,16));if v19 then local v97=0;local v98;while true do if (v97==1) then return v98;end if (v97==0) then v98=v5(v84,v19);v19=nil;v97=1;end end else return v84;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v85=(v31/((5 -(1640 -(1523 + 114)))^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + 1)) ;return v85-(v85%(932 -(857 + 67 + 7))) ;else local v86=0 -0 ;local v87;while true do if (v86==(568 -(367 + 201))) then v87=(929 -(214 + 713))^(v32-(1 + 0)) ;return (((v31%(v87 + v87))>=v87) and (1 + (1065 -(68 + 997)))) or (877 -(282 + 595)) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1272 -(226 + 1044)) );v18=v18 + 2 ;return (v36 * (1114 -858)) + v35 ;end local function v23() local v37=117 -(32 + 85) ;local v38;local v39;local v40;local v41;while true do if (v37==((181 -(67 + 113)) + 0)) then return (v41 * (3720433 + 13056783)) + (v40 * 65536) + (v39 * (1213 -(892 + 65))) + v38 ;end if (v37==(0 -0)) then v38,v39,v40,v41=v1(v16,v18,v18 + ((4 + 1) -2) );v18=v18 + ((16 -9) -3) ;v37=351 -(64 + 23 + 263) ;end end end local function v24() local v42=0 -0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(953 -(802 + 150))) then v45=2 -1 ;v46=(v20(v44,(1539 -(745 + 21)) -(201 + 571) ,36 -16 ) * ((2 + 0)^32)) + v43 ;v42=999 -(915 + 82) ;end if (v42==3) then if (v47==(0 -0)) then if (v46==(0 + 0)) then return v48 * (0 -0) ;else local v99=1187 -(1069 + 118) ;while true do if (v99==(859 -(814 + 45))) then v47=2 -1 ;v45=0 -0 ;break;end end end elseif (v47==(356 + 582 + 1109)) then return ((v46==(0 -0)) and (v48 * ((1 -0)/(0 + 0)))) or (v48 * NaN) ;end return v8(v48,v47-(1814 -(368 + 423)) ) * (v45 + (v46/((6 -4)^(70 -(10 + 8))))) ;end if (v42==(7 -(13 -8))) then v47=v20(v44,463 -(416 + (101 -75)) ,98 -67 );v48=((v20(v44,1 + 13 + 18 )==1) and  -(1748 -(597 + 163 + 987))) or 1 ;v42=4 -1 ;end if (v42==(438 -(145 + 293))) then v43=v23();v44=v23();v42=431 -((1099 -(87 + 968)) + 386) ;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(0 -0)) then return "";end end v50=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;local v51={};for v65=2 -1 , #v50 do v51[v65]=v2(v1(v3(v50,v65,v65)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=0;local v53;local v54;local v55;local v56;local v57;local v58;while true do local v67=0;while true do if (1~=v67) then else if (2~=v52) then else for v100=1,v23() do local v101=1700 -(1419 + 281) ;local v102;while true do if (v101==(0 -0)) then v102=v21();if (v20(v102,1,75 -(71 + 3) )~=(0 + 0)) then else local v113=0 -0 ;local v114;local v115;local v116;while true do if (v113==1) then local v242=0;while true do if (v242~=(0 -0)) then else v116={v22(),v22(),nil,nil};if (v114==0) then local v357=0 + 0 ;local v358;while true do if (v357==0) then v358=0 -0 ;while true do if (v358~=0) then else v116[3]=v22();v116[4]=v22();break;end end break;end end elseif (v114==1) then v116[4 -1 ]=v23();elseif (v114==(1 + 1)) then v116[1639 -(1373 + 263) ]=v23() -(2^(1016 -(451 + 549))) ;elseif (v114==(1 + 2)) then local v377=0 -0 ;while true do if (v377==0) then v116[3]=v23() -(2^(26 -10)) ;v116[4]=v22();break;end end end v242=1385 -(746 + 638) ;end if (v242==(1 + 0)) then v113=2;break;end end end if ((2 -0)~=v113) then else if (v20(v115,342 -(218 + 123) ,1)==(1582 -(1535 + 46))) then v116[2 + 0 ]=v58[v116[2]];end if (v20(v115,2,2)~=(1 + 0)) then else v116[563 -(306 + 254) ]=v58[v116[1 + 2 ]];end v113=5 -2 ;end if ((1470 -(899 + 568))~=v113) then else if (v20(v115,3,3)==1) then v116[4]=v58[v116[3 + 1 ]];end v53[v100]=v116;break;end if (v113==(0 -0)) then local v244=0;while true do if (0~=v244) then else v114=v20(v102,605 -(268 + 335) ,293 -(60 + 230) );v115=v20(v102,576 -(426 + 146) ,6);v244=1 + 0 ;end if (v244==1) then v113=1457 -(282 + 1174) ;break;end end end end end break;end end end for v103=812 -(569 + 242) ,v23() do v54[v103-1 ]=v28();end return v56;end break;end if ((0 -0)==v67) then if (v52~=0) then else local v95=0 + 0 ;while true do if (v95==(1024 -(706 + 318))) then local v110=0;while true do if (v110~=(1251 -(721 + 530))) then else v53={};v54={};v110=1;end if ((1272 -(945 + 326))==v110) then v95=2 -1 ;break;end end end if (v95~=1) then else local v111=0 + 0 ;while true do if (v111~=(700 -(271 + 429))) then else v55={};v56={v53,v54,nil,v55};v111=1087 -(461 + 625) ;end if (v111~=1) then else v95=1290 -(993 + 295) ;break;end end end if (2~=v95) then else v52=1 + 0 ;break;end end end if (v52==1) then v57=v23();v58={};for v105=1172 -(418 + 753) ,v57 do local v106=0 + 0 ;local v107;local v108;local v109;while true do if (v106~=1) then else v109=nil;while true do if (v107==1) then if (v108==1) then v109=v21()~=(0 + 0) ;elseif (v108==2) then v109=v24();elseif (v108~=(1 + 2)) then else v109=v25();end v58[v105]=v109;break;end if (v107==(0 + 0)) then local v129=0;local v130;while true do if (v129==0) then v130=0;while true do if (v130~=(529 -(406 + 123))) then else local v352=1769 -(1749 + 20) ;while true do if (v352~=1) then else v130=1;break;end if (v352==0) then v108=v21();v109=nil;v352=1 + 0 ;end end end if (1==v130) then v107=1;break;end end break;end end end end break;end if (v106==(1322 -(1249 + 73))) then local v112=0;while true do if (1==v112) then v106=1;break;end if (v112==(0 + 0)) then v107=0;v108=nil;v112=1146 -(466 + 679) ;end end end end end v56[3]=v21();v52=4 -2 ;end v67=2 -1 ;end end end end local function v29(v59,v60,v61) local v62=v59[1];local v63=v59[2];local v64=v59[3];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=1;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v88=0,v76 do if (v88>=v70) then v74[v88-v70 ]=v75[v88 + 1 ];else v78[v88]=v75[v88 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=28) then if (v81<=13) then if (v81<=6) then if (v81<=2) then if (v81<=0) then do return;end elseif (v81==1) then v78[v80[2]][v80[3]]=v80[4];else local v133=v80[2];local v134=v78[v80[3]];v78[v133 + 1 ]=v134;v78[v133]=v134[v80[4]];end elseif (v81<=4) then if (v81==3) then v78[v80[2]]=v80[3];else for v245=v80[2],v80[3] do v78[v245]=nil;end end elseif (v81>5) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end else v78[v80[2]]={};end elseif (v81<=9) then if (v81<=7) then v78[v80[2]]=v78[v80[3]];elseif (v81>8) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end else local v141=v80[2];v78[v141](v78[v141 + 1 ]);end elseif (v81<=11) then if (v81>10) then if (v78[v80[2]]==v80[4]) then v72=v72 + 1 ;else v72=v80[3];end else local v142=0;local v143;local v144;local v145;local v146;while true do if (v142==1) then v73=(v145 + v143) -1 ;v146=0;v142=2;end if (v142==0) then v143=v80[2];v144,v145=v71(v78[v143](v13(v78,v143 + 1 ,v80[3])));v142=1;end if (v142==2) then for v330=v143,v73 do v146=v146 + 1 ;v78[v330]=v144[v146];end break;end end end elseif (v81>12) then local v147=0;local v148;local v149;local v150;local v151;while true do if (v147==1) then v73=(v150 + v148) -1 ;v151=0;v147=2;end if (v147==2) then for v333=v148,v73 do v151=v151 + 1 ;v78[v333]=v149[v151];end break;end if (v147==0) then v148=v80[2];v149,v150=v71(v78[v148](v78[v148 + 1 ]));v147=1;end end else local v152=0;local v153;while true do if (v152==0) then v153=v80[2];v78[v153]=v78[v153](v13(v78,v153 + 1 ,v80[3]));break;end end end elseif (v81<=20) then if (v81<=16) then if (v81<=14) then v78[v80[2]][v80[3]]=v78[v80[4]];elseif (v81>15) then local v154=0;local v155;while true do if (v154==0) then v155=v80[2];v78[v155]=v78[v155](v78[v155 + 1 ]);break;end end else local v156=0;local v157;local v158;local v159;while true do if (v156==0) then v157=v80[2];v158={v78[v157](v13(v78,v157 + 1 ,v73))};v156=1;end if (v156==1) then v159=0;for v336=v157,v80[4] do local v337=0;while true do if (0==v337) then v159=v159 + 1 ;v78[v336]=v158[v159];break;end end end break;end end end elseif (v81<=18) then if (v81==17) then v78[v80[2]][v80[3]]=v78[v80[4]];else for v247=v80[2],v80[3] do v78[v247]=nil;end end elseif (v81==19) then local v162=0;local v163;while true do if (v162==0) then v163=v80[2];v78[v163](v13(v78,v163 + 1 ,v80[3]));break;end end else local v164=v80[2];v78[v164]=v78[v164](v13(v78,v164 + 1 ,v80[3]));end elseif (v81<=24) then if (v81<=22) then if (v81>21) then local v166=v80[2];local v167=v78[v166];local v168=v80[3];for v249=1,v168 do v167[v249]=v78[v166 + v249 ];end else v78[v80[2]]();end elseif (v81>23) then do return;end else local v169=0;local v170;local v171;local v172;while true do if (v169==1) then v172=0;for v338=v170,v80[4] do local v339=0;while true do if (0==v339) then v172=v172 + 1 ;v78[v338]=v171[v172];break;end end end break;end if (v169==0) then v170=v80[2];v171={v78[v170](v13(v78,v170 + 1 ,v73))};v169=1;end end end elseif (v81<=26) then if (v81>25) then local v173=v69[v80[3]];local v174;local v175={};v174=v10({},{__index=function(v252,v253) local v254=0;local v255;while true do if (v254==0) then v255=v175[v253];return v255[1][v255[2]];end end end,__newindex=function(v256,v257,v258) local v259=v175[v257];v259[1][v259[2]]=v258;end});for v261=1,v80[4] do local v262=0;local v263;while true do if (0==v262) then v72=v72 + 1 ;v263=v68[v72];v262=1;end if (v262==1) then if (v263[1]==7) then v175[v261-1 ]={v78,v263[3]};else v175[v261-1 ]={v60,v263[3]};end v77[ #v77 + 1 ]=v175;break;end end end v78[v80[2]]=v29(v173,v174,v61);else v78[v80[2]]={};end elseif (v81==27) then local v178=v80[2];local v179,v180=v71(v78[v178](v13(v78,v178 + 1 ,v80[3])));v73=(v180 + v178) -1 ;local v181=0;for v264=v178,v73 do v181=v181 + 1 ;v78[v264]=v179[v181];end else local v182=v69[v80[3]];local v183;local v184={};v183=v10({},{__index=function(v267,v268) local v269=0;local v270;while true do if (v269==0) then v270=v184[v268];return v270[1][v270[2]];end end end,__newindex=function(v271,v272,v273) local v274=v184[v272];v274[1][v274[2]]=v273;end});for v276=1,v80[4] do local v277=0;local v278;while true do if (v277==0) then v72=v72 + 1 ;v278=v68[v72];v277=1;end if (v277==1) then if (v278[1]==7) then v184[v276-1 ]={v78,v278[3]};else v184[v276-1 ]={v60,v278[3]};end v77[ #v77 + 1 ]=v184;break;end end end v78[v80[2]]=v29(v182,v183,v61);end elseif (v81<=43) then if (v81<=35) then if (v81<=31) then if (v81<=29) then local v121=v80[2];local v122=v78[v80[3]];v78[v121 + 1 ]=v122;v78[v121]=v122[v80[4]];elseif (v81>30) then local v186=0;local v187;while true do if (v186==0) then v187=v80[2];v78[v187](v13(v78,v187 + 1 ,v80[3]));break;end end else v78[v80[2]]=v61[v80[3]];end elseif (v81<=33) then if (v81==32) then local v190=v80[2];v78[v190](v78[v190 + 1 ]);else local v191=v80[2];local v192=v80[4];local v193=v191 + 2 ;local v194={v78[v191](v78[v191 + 1 ],v78[v193])};for v279=1,v192 do v78[v193 + v279 ]=v194[v279];end local v195=v194[1];if v195 then v78[v193]=v195;v72=v80[3];else v72=v72 + 1 ;end end elseif (v81==34) then v78[v80[2]]=v78[v80[3]][v80[4]];elseif (v78[v80[2]]~=v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=39) then if (v81<=37) then if (v81==36) then local v198=0;local v199;while true do if (v198==0) then v199=v80[2];v78[v199]=v78[v199](v13(v78,v199 + 1 ,v73));break;end end else local v200=v80[2];v78[v200]=v78[v200]();end elseif (v81==38) then v78[v80[2]]=v61[v80[3]];else v78[v80[2]]=v60[v80[3]];end elseif (v81<=41) then if (v81==40) then v78[v80[2]]=v80[3];else local v208=0;local v209;local v210;while true do if (v208==0) then v209=v80[2];v210=v78[v209];v208=1;end if (v208==1) then for v346=v209 + 1 ,v80[3] do v7(v210,v78[v346]);end break;end end end elseif (v81>42) then v78[v80[2]][v80[3]]=v80[4];else local v213=v80[2];local v214=v78[v213];local v215=v80[3];for v282=1,v215 do v214[v282]=v78[v213 + v282 ];end end elseif (v81<=50) then if (v81<=46) then if (v81<=44) then local v126=0;local v127;while true do if (v126==0) then v127=v80[2];v78[v127]=v78[v127](v78[v127 + 1 ]);break;end end elseif (v81==45) then local v216=v80[2];local v217={};for v287=1, #v77 do local v288=v77[v287];for v301=0, #v288 do local v302=v288[v301];local v303=v302[1];local v304=v302[2];if ((v303==v78) and (v304>=v216)) then local v347=0;while true do if (v347==0) then v217[v304]=v303[v304];v302[1]=v217;break;end end end end end else v78[v80[2]]();end elseif (v81<=48) then if (v81==47) then v78[v80[2]]=v78[v80[3]][v80[4]];else local v220=v80[2];local v221={};for v289=1, #v77 do local v290=0;local v291;while true do if (v290==0) then v291=v77[v289];for v353=0, #v291 do local v354=v291[v353];local v355=v354[1];local v356=v354[2];if ((v355==v78) and (v356>=v220)) then v221[v356]=v355[v356];v354[1]=v221;end end break;end end end end elseif (v81>49) then v72=v80[3];else v72=v80[3];end elseif (v81<=54) then if (v81<=52) then if (v81==51) then v78[v80[2]]=v78[v80[3]];elseif v78[v80[2]] then v72=v72 + 1 ;else v72=v80[3];end elseif (v81==53) then local v226=v80[2];v78[v226]=v78[v226]();elseif (v78[v80[2]]~=v80[4]) then v72=v72 + 1 ;else v72=v80[3];end elseif (v81<=56) then if (v81==55) then local v228=v80[2];v78[v228]=v78[v228](v13(v78,v228 + 1 ,v73));else local v230=v80[2];local v231=v80[4];local v232=v230 + 2 ;local v233={v78[v230](v78[v230 + 1 ],v78[v232])};for v292=1,v231 do v78[v232 + v292 ]=v233[v292];end local v234=v233[1];if v234 then v78[v232]=v234;v72=v80[3];else v72=v72 + 1 ;end end elseif (v81==57) then local v235=0;local v236;local v237;local v238;local v239;while true do if (v235==1) then v73=(v238 + v236) -1 ;v239=0;v235=2;end if (v235==0) then v236=v80[2];v237,v238=v71(v78[v236](v78[v236 + 1 ]));v235=1;end if (v235==2) then for v349=v236,v73 do v239=v239 + 1 ;v78[v349]=v237[v239];end break;end end else v78[v80[2]]=v60[v80[3]];end v72=v72 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
